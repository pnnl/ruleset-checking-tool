from rct229.schema.schema_enums import SchemaEnums
from rct229.utils.jsonpath_utils import find_all

LIGHTING_BUILDING_AREA = SchemaEnums["LightingBuildingAreaOptions2019ASHRAE901T951TG38"]


BUILDING_AREA_LOOKUP = {
    LIGHTING_BUILDING_AREA.AUTOMOTIVE_FACILITY: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.CONVENTION_CENTER: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.COURTHOUSE: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.DINING_BAR_LOUNGE_LEISURE: "RESTAURANT",
    LIGHTING_BUILDING_AREA.DINING_CAFETERIA_FAST_FOOD: "RESTAURANT",
    LIGHTING_BUILDING_AREA.DINING_FAMILY: "RESTAURANT",
    LIGHTING_BUILDING_AREA.DORMITORY: "MULTIFAMILY",
    LIGHTING_BUILDING_AREA.EXERCISE_CENTER: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.FIRE_STATION: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.GYMNASIUM: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.HEALTH_CARE_CLINIC: "HEALTHCARE_HOSPITAL",
    LIGHTING_BUILDING_AREA.HOSPITAL: "HEALTHCARE_HOSPITAL",
    LIGHTING_BUILDING_AREA.HOTEL_MOTEL: "HOTEL_MOTEL",
    LIGHTING_BUILDING_AREA.LIBRARY: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.MANUFACTURING_FACILITY: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.MULTIFAMILY: "MULTIFAMILY",
    LIGHTING_BUILDING_AREA.MUSEUM: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.OFFICE: "OFFICE",
    LIGHTING_BUILDING_AREA.PARKING_GARAGE: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.PENITENTIARY: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.PERFORMING_ARTS_THEATER: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.POLICE_STATION: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.POST_OFFICE: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.RELIGIOUS_FACILITY: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.RETAIL: "RETAIL",
    LIGHTING_BUILDING_AREA.SCHOOL_UNIVERSITY: "SCHOOL",
    LIGHTING_BUILDING_AREA.SPORTS_ARENA: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.TOWN_HALL: "OFFICE",
    LIGHTING_BUILDING_AREA.TRANSPORTATION: "ALL_OTHER",
    LIGHTING_BUILDING_AREA.WAREHOUSE: "WAREHOUSE",
    LIGHTING_BUILDING_AREA.WORKSHOP: "WAREHOUSE",
    LIGHTING_BUILDING_AREA.NONE: "NONE",
}


def get_BPF_building_area_types_and_zones(rmd: dict) -> dict:
    building_area_types_with_total_area_and_zones_dict = {}

    for building_segment in find_all("$.buildings[*].building_segments[*]", rmd):
        if (
            building_segment.get("lighting_building_area_type") is not None
            and building_segment["lighting_building_area_type"]
            != LIGHTING_BUILDING_AREA.NONE
        ):
            building_segment_BPF_BAT = BUILDING_AREA_LOOKUP[building_segment["lighting_building_area_type"]]
            classification_source = "BUILDING_SEGMENT_LIGHTING"
        else:
            building_segment_space_types_areas_dict = {}
            for zone in find_all("$.zones[*]", building_segment):
                pass

    return building_area_types_with_total_area_and_zones_dict
